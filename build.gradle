plugins {
    id "idea"
    id "java"
    id "io.quarkus"
}

repositories {
//    maven { url "https://maven.aliyun.com/repository/public/" }
    mavenCentral()
    mavenLocal()
}

idea {
    module {
        sourceDirs += file('generated/')
        generatedSourceDirs += file('generated/')
    }
}

java.sourceSets["main"].java {
    srcDir("src/gen/java")
    srcDir("target/generated-sources/annotations")
}

group = "io.github.zhengchalei"
version = "1.0"

dependencies {
    implementation(enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}"))

    implementation("io.quarkus:quarkus-smallrye-openapi")
    implementation("io.quarkus:quarkus-resteasy-jackson")
    implementation("io.quarkus:quarkus-smallrye-graphql")

    implementation("io.quarkus:quarkus-qute")
    implementation("io.quarkus:quarkus-smallrye-jwt")
    implementation("io.quarkus:quarkus-smallrye-jwt-build")

    implementation("io.quarkus:quarkus-kubernetes")
    implementation("io.quarkus:quarkus-container-image-jib")

    // db
    implementation("io.quarkus:quarkus-flyway")
    implementation("io.quarkus:quarkus-hibernate-envers")
    implementation("io.quarkus:quarkus-hibernate-orm-panache")
    implementation("io.quarkus:quarkus-hibernate-validator")
    implementation("io.quarkus:quarkus-jdbc-postgresql")

    // redis
    implementation("io.quarkus:quarkus-redis-client")

    // other
    implementation("io.quarkus:quarkus-smallrye-reactive-messaging")

    implementation('org.mapstruct:mapstruct:1.5.3.Final')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.5.3.Final')
    implementation("com.speedment.jpastreamer:jpastreamer-core:1.1.0")
    annotationProcessor("com.speedment.jpastreamer:fieldgenerator-standard:1.1.0")

    implementation("io.quarkus:quarkus-cache")
    implementation("io.quarkus:quarkus-vertx")
    implementation("io.quarkus:quarkus-arc")

    implementation("io.quarkus:quarkus-kotlin")

    testImplementation("io.quarkus:quarkus-junit5")
    testImplementation("io.quarkus:quarkus-panache-mock")
    testImplementation("io.rest-assured:rest-assured")
    testImplementation("io.quarkus:quarkus-test-security-jwt")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
}

compileTestJava {
    options.encoding = "UTF-8"
}
